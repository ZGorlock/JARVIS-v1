'''_MOUSEBUTTON''' Function returns the button status of a specified button.


{{PageSyntax}}
:: buttondown% = {{KW|_MOUSEBUTTON}}({{Parameter|Button%}})



{{PageDescription}}
* Use parameter {{Parameter|Button%}} = 1 for Left button, 2 for right, 3 for middle, etc. 
* Returns -1 if the corresponding numbered button is down.
* Checking _MOUSEINPUT at the end of the DO loop allows one loop to return the current button status.
* Button clicks and mouse movements will be remembered and should be cleared after an [[INPUT]] statement or other procedure. 
* To clear previous mouse values, use a [[_MOUSEINPUT]] loop that loops until it returns 0.
* Use [[_DEVICE$]] to find the &quot;[MOUSE]&quot; [[_DEVICES]] number to find the number of buttons available using [[_LASTBUTTON]].


''Example 1:'' Finding the number of mouse buttons available in QB64. This could also be used for other devices.
{{CodeStart}} '' ''
{{Cl|FOR...NEXT|FOR}} d = 1 {{Cl|TO}} {{Cl|_DEVICES}}  'number of input devices found
  dev$ = {{Cl|_DEVICE$}}(d)
  {{Cl|IF...THEN|IF}} {{Cl|INSTR}}(dev$, &quot;[MOUSE]&quot;) {{Cl|THEN}} buttons = {{Cl|_LASTBUTTON}}(d): {{Cl|EXIT}} {{Cl|FOR...NEXT|FOR}}
{{Cl|NEXT}}
{{Cl|PRINT}} buttons; &quot;mouse buttons available&quot; '' ''
{{CodeEnd}}


''Example 2:'' How to monitor when a button is down or wait until a mouse button is not held down.
{{CodeStart}} '' ''
{{Cl|PRINT}} &quot;Hold down the left mouse button until you want to quit!&quot;
DO
  {{Cl|DO...LOOP|DO}} {{Cl|WHILE}} {{Cl|_MOUSEINPUT}}: {{Cl|LOOP}}   ' read #1
  {{Cl|IF...THEN|IF}} {{Cl|_MOUSEBUTTON}}(1) {{Cl|THEN}} {{Cl|PRINT}} &quot;Clicked&quot;: {{Cl|EXIT DO}}
{{Cl|LOOP}}
{{Cl|DO...LOOP|DO}} '                                                      need to wait
  {{Cl|DO...LOOP|DO}} {{Cl|WHILE}} {{Cl|_MOUSEINPUT}}: {{Cl|LOOP}}  '  read #2                until the mouse
{{Cl|LOOP}} {{Cl|UNTIL}} {{Cl|NOT}} {{Cl|_MOUSEBUTTON}}(1) '                       button is released

{{Cl|PRINT}} &quot;DONE!&quot; '' ''
{{CodeEnd}}


''Example 3:'' Checking for a click or a double-click by the user.
{{CodeStart}} '' ''
{{Cl|DO...LOOP|DO}}  'main program loop

  {{Cl|DO...LOOP|DO}} {{Cl|WHILE}} {{Cl|_MOUSEINPUT}}                'check mouse status
    buttondown = {{Cl|_MOUSEBUTTON}}(1)
  {{Cl|LOOP}}
  {{Cl|DO...LOOP|DO}} {{Cl|WHILE}} buttondown                 'check for button release
    i = {{Cl|_MOUSEINPUT}}
    buttondown = {{Cl|_MOUSEBUTTON}}(1)
    Click = 1
  {{Cl|LOOP}}

  {{Cl|IF...THEN|IF}} Click = 1 {{Cl|THEN}}                   'if button was pressed and released
    t = {{Cl|TIMER}} + .3
    {{Cl|DO...LOOP|DO}} {{Cl|WHILE}} {{Cl|TIMER}} &lt; t      'check for a second press within .3 seconds
      i = {{Cl|_MOUSEINPUT}}
      {{Cl|IF...THEN|IF}} {{Cl|_MOUSEBUTTON}}(1) {{Cl|THEN}} Click = 2: {{Cl|EXIT DO}}
    {{Cl|LOOP}}
    {{Cl|IF...THEN|IF}} Click = 2 {{Cl|THEN}} {{Cl|PRINT}} &quot;Double click&quot; {{Cl|ELSE}} {{Cl|PRINT}} &quot;Click&quot;
  {{Cl|END IF}}
  Click = 0: buttondown = 0            'reset where needed
{{Cl|LOOP}} {{Cl|UNTIL}} {{Cl|INKEY$}} = {{Cl|CHR$}}(27) '' ''
{{CodeEnd}}
: ''Explanation:'' To find the current button status read [[_MOUSEINPUT]] repeatedly. The [[TIMER]] loop looks for a second click.


{{PageSeeAlso}}
* [[_MOUSEX]], [[_MOUSEY]], [[_MOUSEWHEEL]]
* [[_MOUSEINPUT]], [[_MOUSEMOVE]]
* [[_MOUSESHOW]], [[_MOUSEHIDE]]
* [[_DEVICES]], [[_DEVICE$]], [[_LASTBUTTON]]


{{PageNavigation}}