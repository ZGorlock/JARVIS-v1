The '''FOR''' statement creates a counter loop using specified number parameters.



{{PageSyntax}} 
:: FOR count_variable = start_value TO stop_value [STEP interval]
:: .
:: code statements
:: .
:: NEXT [count_variable]


* The FOR counter span variable name is required to define the counter span and may also be used after the NEXT keyword.
* Start and stop counter span values can be any literal or variable numerical type.
* The [[STEP]] keyword is used for intervals that are not 1, not integer or are negative count intervals. 
* Use '''[[EXIT]] FOR''' to leave a FOR loop early when a certain condition is met inside of the loop.
* The FOR variable's value can be increased or decreased by any statement inside of the loop.
* [[STEP]] intervals can be any [[INTEGER]] or floating decimal point value.
* If the variable start value is more than it's ending value, use a negative [[STEP]] interval or the loop value will not decrease and the loop will NEVER STOP!
* '''NOTE: The value of the counter variable AFTER the FOR loop will be one more interval than the variable stop value requested by the loop!'''



''Example:'' Adding all even numbers from 100 to 0.
{{CodeStart}}

FOR i = 10 TO 0 {{Cl|STEP}} -2
  totaleven% = i + totaleven%
  PRINT totaleven%;
NEXT
PRINT &quot;After loop, i =&quot;; i

{{CodeEnd}}
{{OutputStart}}
10 18 24 28 30 After loop, i = -2
{{OutputEnd}}

''Explanation:'' The loop counts down from 10 to every even value below it. The counter keeps stepping down until the FOR statement is false and exits. Thus the value of i is -2 after the loop is exited.


''See also:'' 
* [[STEP]] 
* [[DO...LOOP]], [[WHILE...WEND]]


{{PageNavigation}}