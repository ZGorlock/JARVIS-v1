The '''_OFFSET''' function returns the memory offset of/within a given variable.


{{PageSyntax}}

::: offset%&amp; = _OFFSET(''variable'')


* The ''variable'' parameter can be any type of numerical or [[STRING|string]] variable name.
* Application parameter or [[TYPE|type]] names may include lp, ptr or p which designates them as a pointer type.
* _OFFSET function return values should be stored in [[_OFFSET]] type variables. As no other variable type is 'elastic' like [[_OFFSET]], there can be no guarantee that any other variable type can hold the value of an _OFFSET.
* Returns the memory offset of variables, user-defined-types &amp; elements, arrays &amp; indices and the base offset of [[STRING]]s.
* Offset values are currently only useful when used in conjunction with [[DECLARE DYNAMIC LIBRARY|DECLARE DYNAMIC, CUSTOMTYPE or STATIC LIBRARY]].


''Example:'' Using memcpy with the _OFFSET function values as parameters.
{{CodeStart}} '' ''
{{Cl|DECLARE DYNAMIC LIBRARY|DECLARE CUSTOMTYPE LIBRARY}}
    {{Cl|SUB}} memcpy ({{Cl|BYVAL}} dest {{Cl|AS}} {{Cl|_OFFSET}}, {{Cl|BYVAL}} source {{Cl|AS}} {{Cl|_OFFSET}}, {{Cl|BYVAL}} bytes {{Cl|AS}} {{Cl|LONG}})
{{Cl|DECLARE LIBRARY|END DECLARE}}

a$ = &quot;1234567890&quot;
b$ = &quot;ABCDEFGHIJ&quot;

memcpy {{Cl|_OFFSET (function)|_OFFSET}}(a$) + 5, {{Cl|_OFFSET (function)|_OFFSET}}(b$) + 5, 5
{{Cl|PRINT}} a$ '' ''
{{CodeEnd}}
{{OutputStart}}12345FGHIJ
{{OutputEnd}}


''See also:''
* [[_OFFSET]] {{text|(variable type)}}
* [[DECLARE LIBRARY]]
* [[DECLARE DYNAMIC LIBRARY]]
* [[Using _OFFSET]]


{{PageNavigation}}