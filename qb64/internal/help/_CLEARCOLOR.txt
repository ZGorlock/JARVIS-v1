The {{KW|_CLEARCOLOR}} statement sets a specific color to be treated as transparent when an image is later put (via [[_PUTIMAGE]]) onto another image. 


{{PageSyntax}}
::_CLEARCOLOR {{Parameter|color&amp;}}[, {{Parameter|imageHandle&amp;}}]
::_CLEARCOLOR _NONE[, {{Parameter|imageHandle&amp;}}]


{{PageDescription}}
* In color modes using a palette, {{Parameter|color&amp;}} is the palette index of the new transparent color value.
* If {{Parameter|color&amp;}} is not a valid palette index, an [[ERROR Codes|illegal function call]] error will occur.
* In 32-bit color modes, {{Parameter|color&amp;}} is the color value of the new transparent color value.
* If {{Parameter|imageHandle&amp;}} is omitted, it is assumed to be the current write page.
* If {{Parameter|imageHandle&amp;}} is an invalid handle, then an [[ERROR Codes|invalid handle]] error is returned. Check for bad handle values of -1 first!
* In 32-bit color modes, it simply sets the Alpha to 0 for all pixels matching the specified color.
* In the second syntax, transparency is disabled for color modes using a palette.
* '''NOTE: Default 32 bit backgrounds are clear black or [[_RGBA]](0, 0, 0, 0)! Use [[CLS]] to make the black opaque!'''


''Example 1:'' Using _CLEARCOLOR to &quot;mask&quot; the background color of an image.
{{CodeStart}} '' ''
{{Cl|SCREEN (statement)|SCREEN}} 13
img&amp; = {{Cl|_LOADIMAGE}}(&quot;Qb64.png&quot;)
{{Cl|_PUTIMAGE}} , img&amp;, 0               'place actual image with background
K$ = INPUT$(1)
{{Cl|CLS}} , {{Cl|_RGB}}(255, 0, 0)             'clear screen with red background
{{Cl|_CLEARCOLOR}} {{Cl|_RGB}}(255, 255, 255), img&amp;
{{Cl|_PUTIMAGE}} , img&amp;, 0               'place image without white background
{{Cl|PRINT}} {{Cl|_CLEARCOLOR}}(img&amp;)           'displays closest clear color attribute
{{Cl|END}} '' ''
{{CodeEnd}}
: The ''QB64.PNG'' image can be found at the top of the [http://www.qb64.net/forum/index.php QB64 Forum]


''Example 2:'' Using a _CLEARCOLOR transparency with images created by _NEWIMAGE.
{{CodeStart}}{{Cl|SCREEN (statement)|SCREEN}} {{Cl|_NEWIMAGE}}(512, 384, 32) ' screen uses handle value
{{Cl|CIRCLE}}(50, 50), 50, {{Cl|_RGB}}(128, 0, 0) ' create a red ball image
{{Cl|PAINT}}(50, 50), {{Cl|_RGB}}(255, 0, 0), {{Cl|_RGB}}(128, 0, 0)
redball = {{Cl|_NEWIMAGE}}(101, 101, 32) ' get ball image and handle
{{Cl|_PUTIMAGE}} , 0, redball,(0, 0)-(101, 101) ' put screen page 0 onto redball
{{Cl|_CLEARCOLOR}} {{Cl|_RGB}}(0, 0, 0), redball ' makes black become see-through
{{Cl|CLS}}, {{Cl|_RGB}}(0, 0, 255) ' create a blue background
{{Cl|DO...LOOP|DO}}
{{Cl|_PUTIMAGE| _PUTIMAGE}} ({{Cl|RND}} * 512, {{Cl|RND}} * 384), redball
{{Cl|SLEEP| SLEEP}} 1 ' one second delay
{{Cl|LOOP}} {{Cl|UNTIL}} {{Cl|INKEY$}} &lt;&gt; &quot;&quot; '' ''
{{CodeEnd}}
:The above example is good because you don't need any image file to test it with.





{{PageSeeAlso}}
* [[_CLEARCOLOR (function)]]
* [[Images]], [[Creating Sprite Masks]]


{{PageNavigation}}