The '''DATA''' statement creates a line of fixed program information separated by commas. The DATA can be READ by the program.


''Syntax:'' DATA [value1, value2, ...]


* DATA is used at the beginning of every data field line with commas separating the values that follow.
* Values can be any '''literal''' [[STRING]] or numerical type. '''Variables cannot be used!'''
* DATA fields can be placed and READ consecutively in the main program code body with or without line labels for [[RESTORE]]. 
* DATA is best placed after the main program code. Cannot be placed inside a [[SUB]] or  [[FUNCTION]] procedure!
* [[RESTORE]] will only read the first data field if the DATA is not labeled or RESTORE call uses no label.
* When using multiple DATA fields, label each data field with a line label so that '''each''' data pointer can be reset for multiple reads with [[RESTORE]] ''linelabel''. Otherwise RESTORE will only read the '''first''' data field!
* Comma separations are flexible to allow column alignments when creating them. Spaces are ignored unless inside of quotes.
* [[STRING]] DATA values with end spaces, QB keywords and commas in them '''require''' quotation marks.
* DATA fields can only be created by the programmer and cannot be changed by a user or lost.
* Comments after a data line require a colon before the comment.
* If a [[READ]] is past the last data value, an [[ERROR Codes|&quot;Out of Data&quot; error]] will occur! Use end of data markers when necessary!
* '''WARNING! Do not place DATA fields after [[SUB]] or [[FUNCTION]] procedures! QB64 will FAIL to compile properly!'''
: Qbasic allowed programmers to add DATA fields anywhere because the [[IDE]] separated the main code from other procedures.


''Example:'' Creating two DATA fields that can be [[READ]] repeatedly using [[RESTORE]] with the appropriate line label.
{{CodeStart}} '' ''
{{Cl|RESTORE}} Database2
{{Cl|READ}} A$, B$, C$, D$         'read 4 string values from second DATA field
PRINT A$ + B$ + C$ + D$     'note that quoted strings values are spaced

{{Cl|RESTORE}} Database1
FOR i = 1 TO 18
  {{Cl|READ}} number%                     'read first DATA field 18 times only
  PRINT number%;                   
NEXT

END

Database1:
{{Cl|DATA}} 1, 0, 0, 1, 1, 0, 1, 1, 1
{{Cl|DATA}} 2, 0, 0, 2, 2, 0, 2, 2, 2 :       ' DATA line comments require a colon

Database2:
{{Cl|DATA}} &quot;Hello, &quot;, &quot;world! &quot;, Goodbye, work! '' ''
{{CodeEnd}}
{{OutputStart}}
Hello world! Goodbyework!
1  0  0  1  1  0  1  1  1  2  0  0  2  2  0  2  2  2
{{OutputEnd}}


''See also:'' 
* [[READ]], [[RESTORE]]


{{PageNavigation}}