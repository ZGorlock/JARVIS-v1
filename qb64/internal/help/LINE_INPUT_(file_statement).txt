The '''LINE INPUT #''' file statement reads an entire file line as one string variable value.



{{PageSyntax}}
:: LINE INPUT #filenumber%, linereturn$



* Reads a file using the filenumber [[OPEN]]ed in the [[INPUT (file mode)]] as one file string value.
* Returns [[STRING]] values so it must use one string variable.
* Can be used with [[EOF]] to count the number of lines of data (records) in a file using a loop.
* Use the [[EOF]] function to avoid going past the end of a file and creating an error.
* LINE INPUT # can even retain the original quotation marks in text.
* '''NOTE: If QB64 or QB 4.5 give &quot;Input past End of file&quot; errors, check for CHR$(26) in the files being read!'''


''Example:'' Finding the number of filenames listed in a file to dimension an array to hold them.
{{CodeStart}} '' ''
{{Cl|SHELL}} {{Cl|_HIDE}} &quot;DIR /B *.* &gt; DOS-DATA.INF&quot;  
OPEN &quot;DOS-DATA.INF&quot; FOR INPUT AS #1 'warning: /B data files may not exist or may be empty!
DO UNTIL {{Cl|EOF}}(1)
  LINE INPUT #1, file$        'read entire text file line
  filecount% = filecount% + 1
LOOP
CLOSE #1
REDIM FileArray$(filecount%)
PRINT filecount% '' ''
{{CodeEnd}}


''See also:'' 
* [[LINE INPUT]]
* [[INPUT (file statement)|INPUT #]], [[INPUT$]]
* [[_FILE$]] (Function replacement for [[FILES]])


{{PageNavigation}}